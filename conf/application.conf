# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key=${?APPLICATION_SECRET}

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Registers the request handler
# ~~~~~
play.http.requestHandler = "play.api.http.DefaultHttpRequestHandler"

# Registers the filters
# ~~~~~
# play.filters.enabled += "play.filters.csp.CSPFilter"
play.filters.disabled += play.filters.csp.CSPFilter

play.filters.headers.contentTypeOptions = null

# The application DI modules
# ~~~~~
play.modules.enabled += "modules.BaseModule"
play.modules.enabled += "modules.JobModule"
play.modules.enabled += "modules.SilhouetteModule"
play.modules.enabled += "play.api.libs.mailer.MailerModule"

play.modules.disabled += "com.mohiva.play.silhouette.api.actions.SecuredErrorHandlerModule"
play.modules.disabled += "com.mohiva.play.silhouette.api.actions.UnsecuredErrorHandlerModule"

# The asset configuration
# ~~~~~
play.assets {
  path = "/public"
  urlPrefix = "/assets"
}

# Akka config
akka {
  loglevel = "INFO"
  jvm-exit-on-fatal-error=off

  # Auth token cleaner
  quartz.schedules.AuthTokenCleaner {
    expression = "0 0 */1 * * ?"
    timezone = "UTC"
    description = "cleanup the auth tokens on every hour"
  }
}

# Play mailer
play.mailer {
  host = "smtp.sendgrid.net"
  port = 587
  tls = true
  mock = true
  user = ""
  user = ${?SENDGRID_USERNAME}
  password = ""
  password = ${?SENDGRID_PASSWORD}
}

# Security Filter Configuration - Content Security Policy
play.filters.csp {
  directives {
    default-src = "'self'"
    img-src = "'self' *.fbcdn.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com chart.googleapis.com"
    style-src = "'self' 'unsafe-inline' cdnjs.cloudflare.com maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com"
    font-src = "'self' fonts.gstatic.com fonts.googleapis.com cdnjs.cloudflare.com"
    script-src = ${play.filters.csp.directives.script-src} "cdnjs.cloudflare.com"
    connect-src = "'self' twitter.com *.xing.com"
  }
}

# Allow all proxies for Heroku so that X-Forwarded headers can be read by Play
# ~~~~~
play.http.forwarded.trustedProxies=["0.0.0.0/0", "::/0"]


include "silhouette.conf"

silhouette {

  # Authenticator settings
  authenticator.cookieDomain="scotlandyard-server.herokuapp.com"
  authenticator.secureCookie=true

  # OAuth1 token secret provider settings
  oauth1TokenSecretProvider.cookieDomain="scotlandyard-server.herokuapp.com"
  oauth1TokenSecretProvider.secureCookie=true

  # OAuth2 state provider settings
  oauth2StateProvider.cookieDomain="scotlandyard-server.herokuapp.com"
  oauth2StateProvider.secureCookie=true

  # Facebook provider
  facebook.redirectURL="https://scotlandyard-server.herokuapp.com/authenticate/facebook"

  # Google provider
  google.redirectURL="https://scotlandyard-server.herokuapp.com/authenticate/google"

  # VK provider
  vk.redirectURL="https://scotlandyard-server.herokuapp.com/authenticate/vk"

  # Twitter provider
  twitter.callbackURL="https://scotlandyard-server.herokuapp.com/authenticate/twitter"

  # Xing provider
  xing.callbackURL="https://scotlandyard-server.herokuapp.com/authenticate/xing"

  # Yahoo provider
  yahoo.callbackURL="https://scotlandyard-server.herokuapp.com/authenticate/yahoo"
  yahoo.realm="https://scotlandyard-server.herokuapp.com"
}

play.filters.hosts {
  # Allow requests to heroku, its subdomains, and localhost:9000.
  allowed = [".herokuapp.com", "localhost:9000"]
}
